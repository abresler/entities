% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzyjoins.R
\name{tbl_stringdist_join}
\alias{tbl_stringdist_join}
\title{String Distance Fuzzy Joins}
\usage{
tbl_stringdist_join(
  x,
  y,
  by = NULL,
  max_dist = 2,
  methods = "osa",
  mode = "inner",
  ignore_case = FALSE,
  distance_col = "string_distance",
  ...
)
}
\arguments{
\item{max_dist}{Maximum distance to use for joining}

\item{methods}{\itemize{
\item osa
\item lv
\item hamming
\item lcs
\item qgram
\item cosine
\item jaccard
\item jw

}}

\item{mode}{join method \itemize{
\item left
\item right
\item full
\item inner
\item semi
\item anti
}}

\item{ignore_case}{if `TRUE` ignores case}

\item{distance_col}{if given, will add a column with this name containing the difference between the two}

\item{...}{Arguments passed on to stringdist}
}
\value{
`tibble`
}
\description{
Join two tables based on fuzzy string matching of their columns. This is useful, for example, in matching free-form inputs in a survey or online form, where it can catch misspellings and small personal changes.
}
\examples{
library(dplyr)
library(entities)
library(ggplot2)
data(diamonds)
d <- data_frame(approximate_name = c("Idea", "Premiums", "Premioom",
"VeryGood", "VeryGood", "Faiir"),
type = 1:6)
# no matches when they are inner-joined:
diamonds \%>\%
inner_join(d, by = c(cut = "approximate_name"))

diamonds \%>\%
tbl_stringdist_join(d, mode = "inner", by = c(cut = "approximate_name"), distance_col = NULL)

}
